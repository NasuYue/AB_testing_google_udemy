{
   "kind":"Listing",
   "data":{
      "before":"None",
      "modhash":"None",
      "children":[
         {
            "kind":"t3",
            "data":{
               "created":1458515741.0,
               "author_flair_text":"None",
               "num_comments":13,
               "num_reports":"None",
               "mod_reports":[
                  
               ],
               "domain":"hkupty.github.io",
               "saved":false,
               "hidden":false,
               "report_reasons":"None",
               "distinguished":"None",
               "approved_by":"None",
               "secure_media":"None",
               "selftext":"",
               "link_flair_text":"None",
               "quarantine":false,
               "hide_score":false,
               "archived":false,
               "clicked":false,
               "ups":53,
               "stickied":false,
               "secure_media_embed":{
                  
               },
               "id":"4b7w9u",
               "over_18":false,
               "author":"ingvij",
               "permalink":"/r/Python/comments/4b7w9u/functional_philosophy_and_applying_it_to_python/",
               "name":"t3_4b7w9u",
               "media_embed":{
                  
               },
               "locked":false,
               "is_self":false,
               "subreddit_id":"t5_2qh0y",
               "from_id":"None",
               "created_utc":1458486941.0,
               "url":"http://hkupty.github.io/2016/Functional-Programming-Concepts-Idioms-and-Philosophy/",
               "removal_reason":"None",
               "from_kind":"None",
               "from":"None",
               "downs":0,
               "selftext_html":"None",
               "subreddit":"Python",
               "likes":"None",
               "link_flair_css_class":"None",
               "suggested_sort":"None",
               "banned_by":"None",
               "user_reports":[
                  
               ],
               "media":"None",
               "score":53,
               "visited":false,
               "author_flair_css_class":"None",
               "edited":false,
               "title":"Functional Philosophy and applying it to Python",
               "thumbnail":"",
               "gilded":0
            }
         },
         {
            "kind":"t3",
            "data":{
               "created":1458508731.0,
               "author_flair_text":"None",
               "num_comments":14,
               "num_reports":"None",
               "mod_reports":[
                  
               ],
               "domain":"self.Python",
               "saved":false,
               "hidden":false,
               "report_reasons":"None",
               "distinguished":"None",
               "approved_by":"None",
               "secure_media":"None",
               "selftext":"Hey guys, \n\nSo I made a really simple demonstration of exploiting a local `SQLite` database using `tkinter` in `python`\n\nThought I would share it with you guys\n\n***\n\n- Github link: [https://github.com/prodicus/thanos](https://github.com/prodicus/thanos)\n- screenshots: \n  - SQL injection: http://i.imgur.com/qlzSCuP.jpg\n  - mitigated threat: http://i.imgur.com/42YhmpU.jpg",
               "link_flair_text":"None",
               "quarantine":false,
               "hide_score":false,
               "archived":false,
               "clicked":false,
               "ups":18,
               "stickied":false,
               "secure_media_embed":{
                  
               },
               "id":"4b7gnk",
               "over_18":false,
               "author":"madboy1995",
               "permalink":"/r/Python/comments/4b7gnk/sql_injection_demonstration_on_a_local_sqlite/",
               "name":"t3_4b7gnk",
               "media_embed":{
                  
               },
               "locked":false,
               "is_self":true,
               "subreddit_id":"t5_2qh0y",
               "from_id":"None",
               "created_utc":1458479931.0,
               "url":"https://www.reddit.com/r/Python/comments/4b7gnk/sql_injection_demonstration_on_a_local_sqlite/",
               "removal_reason":"None",
               "from_kind":"None",
               "from":"None",
               "downs":0,
               "selftext_html":"&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey guys, &lt;/p&gt;\n\n&lt;p&gt;So I made a really simple demonstration of exploiting a local &lt;code&gt;SQLite&lt;/code&gt; database using &lt;code&gt;tkinter&lt;/code&gt; in &lt;code&gt;python&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Thought I would share it with you guys&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Github link: &lt;a href=\"https://github.com/prodicus/thanos\"&gt;https://github.com/prodicus/thanos&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;screenshots: \n\n&lt;ul&gt;\n&lt;li&gt;SQL injection: &lt;a href=\"http://i.imgur.com/qlzSCuP.jpg\"&gt;http://i.imgur.com/qlzSCuP.jpg&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;mitigated threat: &lt;a href=\"http://i.imgur.com/42YhmpU.jpg\"&gt;http://i.imgur.com/42YhmpU.jpg&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
               "subreddit":"Python",
               "likes":"None",
               "link_flair_css_class":"None",
               "suggested_sort":"None",
               "banned_by":"None",
               "user_reports":[
                  
               ],
               "media":"None",
               "score":18,
               "visited":false,
               "author_flair_css_class":"None",
               "edited":false,
               "title":"SQL Injection demonstration on a local sqlite database",
               "thumbnail":"",
               "gilded":0
            }
         },
         {
            "kind":"t3",
            "data":{
               "created":1458508823.0,
               "author_flair_text":"None",
               "num_comments":3,
               "num_reports":"None",
               "mod_reports":[
                  
               ],
               "domain":"mrafayaleem.com",
               "saved":false,
               "hidden":false,
               "report_reasons":"None",
               "distinguished":"None",
               "approved_by":"None",
               "secure_media":"None",
               "selftext":"",
               "link_flair_text":"None",
               "quarantine":false,
               "hide_score":false,
               "archived":false,
               "clicked":false,
               "ups":9,
               "stickied":false,
               "secure_media_embed":{
                  
               },
               "id":"4b7gv4",
               "over_18":false,
               "author":"iamspoilt",
               "permalink":"/r/Python/comments/4b7gv4/interfacing_jython_with_kafka_08x/",
               "name":"t3_4b7gv4",
               "media_embed":{
                  
               },
               "locked":false,
               "is_self":false,
               "subreddit_id":"t5_2qh0y",
               "from_id":"None",
               "created_utc":1458480023.0,
               "url":"http://mrafayaleem.com/2016/03/19/interfacing-jython-with-kafka/",
               "removal_reason":"None",
               "from_kind":"None",
               "from":"None",
               "downs":0,
               "selftext_html":"None",
               "subreddit":"Python",
               "likes":"None",
               "link_flair_css_class":"None",
               "suggested_sort":"None",
               "banned_by":"None",
               "user_reports":[
                  
               ],
               "media":"None",
               "score":9,
               "visited":false,
               "author_flair_css_class":"None",
               "edited":false,
               "title":"Interfacing Jython with Kafka 0.8.x",
               "thumbnail":"",
               "gilded":0
            }
         },
         {
            "kind":"t3",
            "data":{
               "created":1458539178.0,
               "author_flair_text":"None",
               "num_comments":1,
               "num_reports":"None",
               "mod_reports":[
                  
               ],
               "domain":"gist.github.com",
               "saved":false,
               "hidden":false,
               "report_reasons":"None",
               "distinguished":"None",
               "approved_by":"None",
               "secure_media":"None",
               "selftext":"",
               "link_flair_text":"None",
               "quarantine":false,
               "hide_score":false,
               "archived":false,
               "clicked":false,
               "ups":6,
               "stickied":false,
               "secure_media_embed":{
                  
               },
               "id":"4b9g8m",
               "over_18":false,
               "author":"danwin",
               "permalink":"/r/Python/comments/4b9g8m/using_selenium_and_python_to_screenshot_a/",
               "name":"t3_4b9g8m",
               "media_embed":{
                  
               },
               "locked":false,
               "is_self":false,
               "subreddit_id":"t5_2qh0y",
               "from_id":"None",
               "created_utc":1458510378.0,
               "url":"https://gist.github.com/dannguyen/61af3c7cbdef9d04a5fe",
               "removal_reason":"None",
               "from_kind":"None",
               "from":"None",
               "downs":0,
               "selftext_html":"None",
               "subreddit":"Python",
               "likes":"None",
               "link_flair_css_class":"None",
               "suggested_sort":"None",
               "banned_by":"None",
               "user_reports":[
                  
               ],
               "media":"None",
               "score":6,
               "visited":false,
               "author_flair_css_class":"None",
               "edited":false,
               "title":"Using Selenium and Python to screenshot a javascript-heavy page",
               "thumbnail":"",
               "gilded":0
            }
         },
         {
            "kind":"t3",
            "data":{
               "created":1458476003.0,
               "author_flair_text":"None",
               "num_comments":4,
               "num_reports":"None",
               "mod_reports":[
                  
               ],
               "domain":"self.Python",
               "saved":false,
               "hidden":false,
               "report_reasons":"None",
               "distinguished":"None",
               "approved_by":"None",
               "secure_media":"None",
               "selftext":"Hi, I am using Pillow to handle images in Django, and I would like to optimize images using mozjpeg before saving them.\n\nI\\'ve tried searching and reading documentation, but there isn\\'t any information on how to use these libraries together, and these tags don\\'t appear to be very active on Stackoverflow either. Am I not looking hard enough, or is this something that I\\'m expected to figure out on my own from reading source code by this point? I haven\\'t had any formal training with programming, so this is probably out of my league but I really want to figure it out.\n\nMy goal is to take a user-uploaded image in Django and a boolean input, and do the following:\n\n - If original &gt; 10mb, reject upload\n - If 10mb &gt;= original &gt; 1mb, resize and compress and optimize to &lt; 500kb\n - If original &lt;= 1mb and boolean is False, compress and optimize to &lt; 500kb\n - If original &lt;= 1mb and boolean is True, only optimize\n\nThen save the resulting ImageField and image file to an Amazon S3 bucket, and retrieve it from a different URL on CloudFront (currently using django-storages and boto for this). The filename would be randomly generated (I have yet to write an exception to retry if there\\'s a \"filename exists\" collision when saving to S3):\n\n    def generate_filename():\n        return get_random_string(length=12, allowed_chars=u\\'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\\')\n\nAfter saving the original image, generate thumbnails of various sizes with the same filename and a suffix corresponding to the size, ex: `filename_s.jpg`, `filename_m.jpg`, `filename_l.jpg` and save these to another S3 bucket.\n\nThe difficulty for me mostly has to do with not knowing how to implement this in code. Here are the questions I have:\n\n1. How can images be [piped to mozjpeg](https://github.com/mozilla/mozjpeg/blob/master/usage.txt#L25) from Pillow directly and losslessly in memory (without saving to a NamedTemporaryFile)? I primarily want to avoid the situation where Pillow compresses the image and then mozjpeg compresses the already compressed image again, especially if mozjpeg could do a better job at it.\n\n2. I don\\'t expect anyone to write my code for me, but a minimal snippet of sample code to help me understand how Python/Pillow can interact with mozjpeg and how everything fits together (where to put the logic of the If statements above) would be very much appreciated. ",
               "link_flair_text":"None",
               "quarantine":false,
               "hide_score":false,
               "archived":false,
               "clicked":false,
               "ups":3,
               "stickied":false,
               "secure_media_embed":{
                  
               },
               "id":"4b6bew",
               "over_18":false,
               "author":"lelease",
               "permalink":"/r/Python/comments/4b6bew/using_pilpillow_with_mozjpeg/",
               "name":"t3_4b6bew",
               "media_embed":{
                  
               },
               "locked":false,
               "is_self":true,
               "subreddit_id":"t5_2qh0y",
               "from_id":"None",
               "created_utc":1458447203.0,
               "url":"https://www.reddit.com/r/Python/comments/4b6bew/using_pilpillow_with_mozjpeg/",
               "removal_reason":"None",
               "from_kind":"None",
               "from":"None",
               "downs":0,
               "selftext_html":"&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi, I am using Pillow to handle images in Django, and I would like to optimize images using mozjpeg before saving them.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve tried searching and reading documentation, but there isn&amp;#39;t any information on how to use these libraries together, and these tags don&amp;#39;t appear to be very active on Stackoverflow either. Am I not looking hard enough, or is this something that I&amp;#39;m expected to figure out on my own from reading source code by this point? I haven&amp;#39;t had any formal training with programming, so this is probably out of my league but I really want to figure it out.&lt;/p&gt;\n\n&lt;p&gt;My goal is to take a user-uploaded image in Django and a boolean input, and do the following:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;If original &amp;gt; 10mb, reject upload&lt;/li&gt;\n&lt;li&gt;If 10mb &amp;gt;= original &amp;gt; 1mb, resize and compress and optimize to &amp;lt; 500kb&lt;/li&gt;\n&lt;li&gt;If original &amp;lt;= 1mb and boolean is False, compress and optimize to &amp;lt; 500kb&lt;/li&gt;\n&lt;li&gt;If original &amp;lt;= 1mb and boolean is True, only optimize&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Then save the resulting ImageField and image file to an Amazon S3 bucket, and retrieve it from a different URL on CloudFront (currently using django-storages and boto for this). The filename would be randomly generated (I have yet to write an exception to retry if there&amp;#39;s a &amp;quot;filename exists&amp;quot; collision when saving to S3):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def generate_filename():\n    return get_random_string(length=12, allowed_chars=u&amp;#39;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&amp;#39;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;After saving the original image, generate thumbnails of various sizes with the same filename and a suffix corresponding to the size, ex: &lt;code&gt;filename_s.jpg&lt;/code&gt;, &lt;code&gt;filename_m.jpg&lt;/code&gt;, &lt;code&gt;filename_l.jpg&lt;/code&gt; and save these to another S3 bucket.&lt;/p&gt;\n\n&lt;p&gt;The difficulty for me mostly has to do with not knowing how to implement this in code. Here are the questions I have:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;How can images be &lt;a href=\"https://github.com/mozilla/mozjpeg/blob/master/usage.txt#L25\"&gt;piped to mozjpeg&lt;/a&gt; from Pillow directly and losslessly in memory (without saving to a NamedTemporaryFile)? I primarily want to avoid the situation where Pillow compresses the image and then mozjpeg compresses the already compressed image again, especially if mozjpeg could do a better job at it.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;I don&amp;#39;t expect anyone to write my code for me, but a minimal snippet of sample code to help me understand how Python/Pillow can interact with mozjpeg and how everything fits together (where to put the logic of the If statements above) would be very much appreciated. &lt;/p&gt;&lt;/li&gt;\n&lt;/ol&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
               "subreddit":"Python",
               "likes":"None",
               "link_flair_css_class":"None",
               "suggested_sort":"None",
               "banned_by":"None",
               "user_reports":[
                  
               ],
               "media":"None",
               "score":3,
               "visited":false,
               "author_flair_css_class":"None",
               "edited":1458447615.0,
               "title":"Using PIL/Pillow with mozjpeg",
               "thumbnail":"",
               "gilded":0
            }
         },
         {
            "kind":"t3",
            "data":{
               "created":1458522644.0,
               "author_flair_text":"None",
               "num_comments":0,
               "num_reports":"None",
               "mod_reports":[
                  
               ],
               "domain":"kracekumar.com",
               "saved":false,
               "hidden":false,
               "report_reasons":"None",
               "distinguished":"None",
               "approved_by":"None",
               "secure_media":"None",
               "selftext":"",
               "link_flair_text":"None",
               "quarantine":false,
               "hide_score":false,
               "archived":false,
               "clicked":false,
               "ups":1,
               "stickied":false,
               "secure_media_embed":{
                  
               },
               "id":"4b8bw0",
               "over_18":false,
               "author":"kracekumar",
               "permalink":"/r/Python/comments/4b8bw0/django_admin_permission_for_staff_user/",
               "name":"t3_4b8bw0",
               "media_embed":{
                  
               },
               "locked":false,
               "is_self":false,
               "subreddit_id":"t5_2qh0y",
               "from_id":"None",
               "created_utc":1458493844.0,
               "url":"http://kracekumar.com/post/141377389440/permissions-in-django-admin",
               "removal_reason":"None",
               "from_kind":"None",
               "from":"None",
               "downs":0,
               "selftext_html":"None",
               "subreddit":"Python",
               "likes":"None",
               "link_flair_css_class":"None",
               "suggested_sort":"None",
               "banned_by":"None",
               "user_reports":[
                  
               ],
               "media":"None",
               "score":1,
               "visited":false,
               "author_flair_css_class":"None",
               "edited":false,
               "title":"Django admin permission for staff user",
               "thumbnail":"",
               "gilded":0
            }
         },
         {
            "kind":"t3",
            "data":{
               "created":1458539842.0,
               "author_flair_text":"None",
               "num_comments":1,
               "num_reports":"None",
               "mod_reports":[
                  
               ],
               "domain":"self.Python",
               "saved":false,
               "hidden":false,
               "report_reasons":"None",
               "distinguished":"None",
               "approved_by":"None",
               "secure_media":"None",
               "selftext":"I frequently have two Jupyter QtConsole windows open. One running under 2.7, and one under 3.5. At the moment I distinguish between the two by using two completely different colour schemes so that I can tell which one I\\'m working in.\n\nIdeally I\\'d prefer to be able to change the window title from \"Jupyter QtConsole\" into something customised, e.g. \"Jupyter 3.5\". I haven\\'t been able to find anything in the documentation that describes changing the title. Is is possible?",
               "link_flair_text":"None",
               "quarantine":false,
               "hide_score":false,
               "archived":false,
               "clicked":false,
               "ups":1,
               "stickied":false,
               "secure_media_embed":{
                  
               },
               "id":"4b9hve",
               "over_18":false,
               "author":"ThatOtherBatman",
               "permalink":"/r/Python/comments/4b9hve/setting_title_jupyter_qtconsole_window/",
               "name":"t3_4b9hve",
               "media_embed":{
                  
               },
               "locked":false,
               "is_self":true,
               "subreddit_id":"t5_2qh0y",
               "from_id":"None",
               "created_utc":1458511042.0,
               "url":"https://www.reddit.com/r/Python/comments/4b9hve/setting_title_jupyter_qtconsole_window/",
               "removal_reason":"None",
               "from_kind":"None",
               "from":"None",
               "downs":0,
               "selftext_html":"&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I frequently have two Jupyter QtConsole windows open. One running under 2.7, and one under 3.5. At the moment I distinguish between the two by using two completely different colour schemes so that I can tell which one I&amp;#39;m working in.&lt;/p&gt;\n\n&lt;p&gt;Ideally I&amp;#39;d prefer to be able to change the window title from &amp;quot;Jupyter QtConsole&amp;quot; into something customised, e.g. &amp;quot;Jupyter 3.5&amp;quot;. I haven&amp;#39;t been able to find anything in the documentation that describes changing the title. Is is possible?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
               "subreddit":"Python",
               "likes":"None",
               "link_flair_css_class":"None",
               "suggested_sort":"None",
               "banned_by":"None",
               "user_reports":[
                  
               ],
               "media":"None",
               "score":1,
               "visited":false,
               "author_flair_css_class":"None",
               "edited":false,
               "title":"Setting Title Jupyter QtConsole Window",
               "thumbnail":"",
               "gilded":0
            }
         },
         {
            "kind":"t3",
            "data":{
               "created":1458532995.0,
               "author_flair_text":"None",
               "num_comments":2,
               "num_reports":"None",
               "mod_reports":[
                  
               ],
               "domain":"self.Python",
               "saved":false,
               "hidden":false,
               "report_reasons":"None",
               "distinguished":"None",
               "approved_by":"None",
               "secure_media":"None",
               "selftext":"I learned to do image processing with PIL/Pillow and I successfully used it for many graphics tasks.\n\nI'm currently trying to nice lines and curves for a new project, but I found that the `ImageDraw`module doesn't use anti-aliasing, and the result is pretty ugly. What library could I use to generate better images drawing lines and curves?",
               "link_flair_text":"None",
               "quarantine":false,
               "hide_score":false,
               "archived":false,
               "clicked":false,
               "ups":1,
               "stickied":false,
               "secure_media_embed":{
                  
               },
               "id":"4b918x",
               "over_18":false,
               "author":"loderunnr",
               "permalink":"/r/Python/comments/4b918x/drawing_library_with_antialiasing/",
               "name":"t3_4b918x",
               "media_embed":{
                  
               },
               "locked":false,
               "is_self":true,
               "subreddit_id":"t5_2qh0y",
               "from_id":"None",
               "created_utc":1458504195.0,
               "url":"https://www.reddit.com/r/Python/comments/4b918x/drawing_library_with_antialiasing/",
               "removal_reason":"None",
               "from_kind":"None",
               "from":"None",
               "downs":0,
               "selftext_html":"&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I learned to do image processing with PIL/Pillow and I successfully used it for many graphics tasks.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m currently trying to nice lines and curves for a new project, but I found that the &lt;code&gt;ImageDraw&lt;/code&gt;module doesn&amp;#39;t use anti-aliasing, and the result is pretty ugly. What library could I use to generate better images drawing lines and curves?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
               "subreddit":"Python",
               "likes":"None",
               "link_flair_css_class":"None",
               "suggested_sort":"None",
               "banned_by":"None",
               "user_reports":[
                  
               ],
               "media":"None",
               "score":1,
               "visited":false,
               "author_flair_css_class":"None",
               "edited":false,
               "title":"Drawing library with anti-aliasing?",
               "thumbnail":"",
               "gilded":0
            }
         },
         {
            "kind":"t3",
            "data":{
               "created":1458533849.0,
               "author_flair_text":"None",
               "num_comments":4,
               "num_reports":"None",
               "mod_reports":[
                  
               ],
               "domain":"self.Python",
               "saved":false,
               "hidden":false,
               "report_reasons":"None",
               "distinguished":"None",
               "approved_by":"None",
               "secure_media":"None",
               "selftext":"I have read that this might be because of spaces in my path, but i've tried to manually put quotes around each pyi... file in Scripts, and the same error occurs.\n\nThere's no problem with gaining access to the Scripts folder anyways, so i don't think that's the issue. I'm using python 3.5.1.",
               "link_flair_text":"None",
               "quarantine":false,
               "hide_score":false,
               "archived":false,
               "clicked":false,
               "ups":0,
               "stickied":false,
               "secure_media_embed":{
                  
               },
               "id":"4b93c0",
               "over_18":false,
               "author":"Grandfather_Clock",
               "permalink":"/r/Python/comments/4b93c0/i_cant_get_pyinstaller_to_run_prints_failed_to/",
               "name":"t3_4b93c0",
               "media_embed":{
                  
               },
               "locked":false,
               "is_self":true,
               "subreddit_id":"t5_2qh0y",
               "from_id":"None",
               "created_utc":1458505049.0,
               "url":"https://www.reddit.com/r/Python/comments/4b93c0/i_cant_get_pyinstaller_to_run_prints_failed_to/",
               "removal_reason":"None",
               "from_kind":"None",
               "from":"None",
               "downs":0,
               "selftext_html":"&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have read that this might be because of spaces in my path, but i&amp;#39;ve tried to manually put quotes around each pyi... file in Scripts, and the same error occurs.&lt;/p&gt;\n\n&lt;p&gt;There&amp;#39;s no problem with gaining access to the Scripts folder anyways, so i don&amp;#39;t think that&amp;#39;s the issue. I&amp;#39;m using python 3.5.1.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
               "subreddit":"Python",
               "likes":"None",
               "link_flair_css_class":"None",
               "suggested_sort":"None",
               "banned_by":"None",
               "user_reports":[
                  
               ],
               "media":"None",
               "score":0,
               "visited":false,
               "author_flair_css_class":"None",
               "edited":false,
               "title":"I can\\'t get PyInstaller to run; prints \"failed to create process\"",
               "thumbnail":"",
               "gilded":0
            }
         },
         {
            "kind":"t3",
            "data":{
               "created":1458531631.0,
               "author_flair_text":"None",
               "num_comments":3,
               "num_reports":"None",
               "mod_reports":[
                  
               ],
               "domain":"self.Python",
               "saved":false,
               "hidden":false,
               "report_reasons":"None",
               "distinguished":"None",
               "approved_by":"None",
               "secure_media":"None",
               "selftext":"Hey,\nI\\'m about to programm a python script. In this I need to know if the screen is on or in standby at the moment. Is there a Unix (Raspbian) command which tells me this and which I could use in the script?\nbtw. does somebody know how to edit the \"go to standby\" time for the monitor?\nThanks",
               "link_flair_text":"None",
               "quarantine":false,
               "hide_score":false,
               "archived":false,
               "clicked":false,
               "ups":0,
               "stickied":false,
               "secure_media_embed":{
                  
               },
               "id":"4b8xx5",
               "over_18":false,
               "author":"xBlackShad0w",
               "permalink":"/r/Python/comments/4b8xx5/command_is_monitor_in_standby_in_python/",
               "name":"t3_4b8xx5",
               "media_embed":{
                  
               },
               "locked":false,
               "is_self":true,
               "subreddit_id":"t5_2qh0y",
               "from_id":"None",
               "created_utc":1458502831.0,
               "url":"https://www.reddit.com/r/Python/comments/4b8xx5/command_is_monitor_in_standby_in_python/",
               "removal_reason":"None",
               "from_kind":"None",
               "from":"None",
               "downs":0,
               "selftext_html":"&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey,\nI&amp;#39;m about to programm a python script. In this I need to know if the screen is on or in standby at the moment. Is there a Unix (Raspbian) command which tells me this and which I could use in the script?\nbtw. does somebody know how to edit the &amp;quot;go to standby&amp;quot; time for the monitor?\nThanks&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
               "subreddit":"Python",
               "likes":"None",
               "link_flair_css_class":"None",
               "suggested_sort":"None",
               "banned_by":"None",
               "user_reports":[
                  
               ],
               "media":"None",
               "score":0,
               "visited":false,
               "author_flair_css_class":"None",
               "edited":false,
               "title":"Command: \"is Monitor in standby\" in Python?",
               "thumbnail":"",
               "gilded":0
            }
         },
         {
            "kind":"t3",
            "data":{
               "created":1458530083.0,
               "author_flair_text":"None",
               "num_comments":8,
               "num_reports":"None",
               "mod_reports":[
                  
               ],
               "domain":"self.Python",
               "saved":false,
               "hidden":false,
               "report_reasons":"None",
               "distinguished":"None",
               "approved_by":"None",
               "secure_media":"None",
               "selftext":"Here is the code guys!If you could explain it somehow it would be great!\n\n    def reverse(text):\n        rev=\"\"\n        for i in text:\n            rev = i+rev\n        return rev\n    print reverse(\"Hello guys\")",
               "link_flair_text":"None",
               "quarantine":false,
               "hide_score":false,
               "archived":false,
               "clicked":false,
               "ups":0,
               "stickied":false,
               "secure_media_embed":{
                  
               },
               "id":"4b8u3h",
               "over_18":false,
               "author":"Py_learner222",
               "permalink":"/r/Python/comments/4b8u3h/how_did_this_guy_made_this_code_reverse_the_text/",
               "name":"t3_4b8u3h",
               "media_embed":{
                  
               },
               "locked":false,
               "is_self":true,
               "subreddit_id":"t5_2qh0y",
               "from_id":"None",
               "created_utc":1458501283.0,
               "url":"https://www.reddit.com/r/Python/comments/4b8u3h/how_did_this_guy_made_this_code_reverse_the_text/",
               "removal_reason":"None",
               "from_kind":"None",
               "from":"None",
               "downs":0,
               "selftext_html":"&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Here is the code guys!If you could explain it somehow it would be great!&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def reverse(text):\n    rev=&amp;quot;&amp;quot;\n    for i in text:\n        rev = i+rev\n    return rev\nprint reverse(&amp;quot;Hello guys&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
               "subreddit":"Python",
               "likes":"None",
               "link_flair_css_class":"None",
               "suggested_sort":"None",
               "banned_by":"None",
               "user_reports":[
                  
               ],
               "media":"None",
               "score":0,
               "visited":false,
               "author_flair_css_class":"None",
               "edited":false,
               "title":"How did this guy made this code reverse the text?",
               "thumbnail":"",
               "gilded":0
            }
         },
         {
            "kind":"t3",
            "data":{
               "created":1458514372.0,
               "author_flair_text":"None",
               "num_comments":2,
               "num_reports":"None",
               "mod_reports":[
                  
               ],
               "domain":"github.com",
               "saved":false,
               "hidden":false,
               "report_reasons":"None",
               "distinguished":"None",
               "approved_by":"None",
               "secure_media":"None",
               "selftext":"",
               "link_flair_text":"None",
               "quarantine":false,
               "hide_score":false,
               "archived":false,
               "clicked":false,
               "ups":0,
               "stickied":false,
               "secure_media_embed":{
                  
               },
               "id":"4b7szt",
               "over_18":false,
               "author":"iniy",
               "permalink":"/r/Python/comments/4b7szt/planing_for_a_new_book_any_suggestion/",
               "name":"t3_4b7szt",
               "media_embed":{
                  
               },
               "locked":false,
               "is_self":false,
               "subreddit_id":"t5_2qh0y",
               "from_id":"None",
               "created_utc":1458485572.0,
               "url":"https://github.com/rainyear/Data-Structures-and-Algorithms-in-Interview",
               "removal_reason":"None",
               "from_kind":"None",
               "from":"None",
               "downs":0,
               "selftext_html":"None",
               "subreddit":"Python",
               "likes":"None",
               "link_flair_css_class":"None",
               "suggested_sort":"None",
               "banned_by":"None",
               "user_reports":[
                  
               ],
               "media":"None",
               "score":0,
               "visited":false,
               "author_flair_css_class":"None",
               "edited":false,
               "title":"Planing for a new book, any suggestion?",
               "thumbnail":"",
               "gilded":0
            }
         },
         {
            "kind":"t3",
            "data":{
               "created":1458508300.0,
               "author_flair_text":"None",
               "num_comments":18,
               "num_reports":"None",
               "mod_reports":[
                  
               ],
               "domain":"self.Python",
               "saved":false,
               "hidden":false,
               "report_reasons":"None",
               "distinguished":"None",
               "approved_by":"None",
               "secure_media":"None",
               "selftext":"Hello. I am not a coder by trade and am an older guy still in school. I find programming to be an incredibly soothing, creative outlet and have a reasonable amount of experience in C/C++/Java, assembly and VHDL and enjoy them all. I'm having my second go-around trying to learn Python since it seems so popular these days, and I am interested in it currently because of the statistical packages that are offered for it. I find the language incredibly goofy and strange, yet everyone touts it as 'easy to learn' and 'elegant' and stuff like that. I feel that I'm in the minority here and was wondering if anyone could shed some light on what I'm missing here.\n\nI *am* interested in portable code, since I'm primarily a Linux user but would like to create things readily-runnable on other platforms. But the syntax and whole philosophy behind Python...I'm just not getting it.\n\nAny takers? I'm not trying to spark a fire here, I just really want to know if there's something I'm missing. I have scoured the net for reasons and am still not convinced. ",
               "link_flair_text":"None",
               "quarantine":false,
               "hide_score":false,
               "archived":false,
               "clicked":false,
               "ups":0,
               "stickied":false,
               "secure_media_embed":{
                  
               },
               "id":"4b7fph",
               "over_18":false,
               "author":"jaques_sauvignon",
               "permalink":"/r/Python/comments/4b7fph/as_a_cfamily_guy_convince_me_to_learn_python/",
               "name":"t3_4b7fph",
               "media_embed":{
                  
               },
               "locked":false,
               "is_self":true,
               "subreddit_id":"t5_2qh0y",
               "from_id":"None",
               "created_utc":1458479500.0,
               "url":"https://www.reddit.com/r/Python/comments/4b7fph/as_a_cfamily_guy_convince_me_to_learn_python/",
               "removal_reason":"None",
               "from_kind":"None",
               "from":"None",
               "downs":0,
               "selftext_html":"&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello. I am not a coder by trade and am an older guy still in school. I find programming to be an incredibly soothing, creative outlet and have a reasonable amount of experience in C/C++/Java, assembly and VHDL and enjoy them all. I&amp;#39;m having my second go-around trying to learn Python since it seems so popular these days, and I am interested in it currently because of the statistical packages that are offered for it. I find the language incredibly goofy and strange, yet everyone touts it as &amp;#39;easy to learn&amp;#39; and &amp;#39;elegant&amp;#39; and stuff like that. I feel that I&amp;#39;m in the minority here and was wondering if anyone could shed some light on what I&amp;#39;m missing here.&lt;/p&gt;\n\n&lt;p&gt;I &lt;em&gt;am&lt;/em&gt; interested in portable code, since I&amp;#39;m primarily a Linux user but would like to create things readily-runnable on other platforms. But the syntax and whole philosophy behind Python...I&amp;#39;m just not getting it.&lt;/p&gt;\n\n&lt;p&gt;Any takers? I&amp;#39;m not trying to spark a fire here, I just really want to know if there&amp;#39;s something I&amp;#39;m missing. I have scoured the net for reasons and am still not convinced. &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
               "subreddit":"Python",
               "likes":"None",
               "link_flair_css_class":"None",
               "suggested_sort":"None",
               "banned_by":"None",
               "user_reports":[
                  
               ],
               "media":"None",
               "score":0,
               "visited":false,
               "author_flair_css_class":"None",
               "edited":false,
               "title":"As a C-family guy, convince me to learn Python?",
               "thumbnail":"",
               "gilded":0
            }
         }
      ],
      "after":"None"
   }
}